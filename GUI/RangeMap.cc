#include "QtOpenGL/QGLWidget"

#include "Messages/RadarConfig.h"
#include "Utils/Utils.h"

#include "RangeMap.h"

using namespace SideCar::GUI;

struct LatLon
{
    double lat;
    double lon;
};

const RangeMap::LatLon RangeMap::map_[] = {
    { 37.55000,-117.08333 },
    { 37.66667,-117.08333 },
    { 37.88333,-117.08333 },
    { 37.88333,-116.91667 },
    { 37.88333,-116.66667 },
    { 37.88333,-116.43333 },
    { 37.88333,-116.18333 },
    { 37.70000,-116.18333 },
    { 37.70000,-115.88333 },
    { 37.62500,-115.88333 },
    { 37.62500,-116.02500 },
    { 37.38333,-116.31667 },
    { 37.62500,-116.02500 },
    { 37.62500,-115.88333 },
    { 37.56667,-115.88333 },
    { 37.55000,-115.88333 },
    { 37.55000,-115.80000 },
    { 37.46667,-115.80000 },
    { 37.46667,-115.58333 },
    { 37.10000,-115.58333 },
    { 37.10000,-115.93333 },
    { 36.68333,-115.93333 },
    { 36.68333,-116.01667 },
    { 36.68333,-116.25000 },
    { 36.68333,-116.44167 },
    { 36.76667,-116.44167 },
    { 36.85000,-116.44167 },
    { 36.85000,-116.56667 },
    { 37.26667,-116.91667 },
    { 37.44167,-117.08333 },
    { 37.55000,-117.08333 },
    { 37.55000,-117.08333 },
    { 37.66667,-117.08333 },
    { 37.66667,-116.81667 },
    { 37.78333,-116.91667 },
    { 37.88333,-116.91667 },
    { 37.88333,-116.66667 },
    { 37.66667,-116.66667 },
    { 37.66667,-116.81667 },
    { 37.55000,-116.71389 },
    { 37.55000,-117.08333 },
    { 37.55000,-116.71389 },
    { 37.55000,-116.43333 },
    { 37.75000,-116.43333 },
    { 37.75000,-116.38333 },
    { 37.70000,-116.38333 },
    { 37.70000,-116.43333 },
    { 37.88333,-116.43333 },
    { 37.88333,-116.18333 },
    { 37.70000,-116.18333 },
    { 37.55000,-116.31667 },
    { 37.38333,-116.31667 },
    { 37.38333,-116.36667 },
    { 37.35000,-116.45000 },
    { 37.35000,-116.56667 },
    { 37.55000,-116.43333 },
    { 37.55000,-116.31667 },
    { 37.38333,-116.31667 },
    { 37.38333,-116.28333 },
    { 37.33333,-116.18333 },
    { 37.26667,-116.18333 },
    { 37.26667,-116.30000 },
    { 37.26667,-116.44167 },
    { 37.13333,-116.44167 },
    { 37.26667,-116.51667 },
    { 37.26667,-116.91667 },
    { 37.26667,-116.83333 },
    { 37.33333,-116.83333 },
    { 37.33333,-116.82917 },
    { 37.33856,-116.82865 },
    { 37.34365,-116.82711 },
    { 37.34850,-116.82459 },
    { 37.35297,-116.82115 },
    { 37.35695,-116.81687 },
    { 37.36036,-116.81186 },
    { 37.36310,-116.80624 },
    { 37.36510,-116.80014 },
    { 37.36633,-116.79373 },
    { 37.36674,-116.78716 },
    { 37.36633,-116.78059 },
    { 37.36510,-116.77417 },
    { 37.36310,-116.76808 },
    { 37.36036,-116.76246 },
    { 37.35695,-116.75745 },
    { 37.35297,-116.75317 },
    { 37.34850,-116.74973 },
    { 37.34365,-116.74720 },
    { 37.33856,-116.74567 },
    { 37.33333,-116.74515 },
    { 37.33333,-116.75051 },
    { 37.33333,-116.75051 },
    { 37.33855,-116.75000 },
    { 37.34363,-116.74846 },
    { 37.34847,-116.74595 },
    { 37.35293,-116.74251 },
    { 37.35691,-116.73824 },
    { 37.36030,-116.73324 },
    { 37.36304,-116.72763 },
    { 37.36504,-116.72155 },
    { 37.36626,-116.71515 },
    { 37.36667,-116.70859 },
    { 37.36626,-116.70203 },
    { 37.36504,-116.69563 },
    { 37.36304,-116.68955 },
    { 37.36030,-116.68394 },
    { 37.35691,-116.67894 },
    { 37.35293,-116.67466 },
    { 37.34847,-116.67123 },
    { 37.34363,-116.66871 },
    { 37.33855,-116.66718 },
    { 37.33333,-116.66667 },
    { 37.33333,-116.83333 },
    { 37.33333,-116.61667 },
    { 37.26667,-116.61667 },
    { 37.33333,-116.61667 },
    { 37.41667,-116.61667 },
    { 37.35000,-116.56667 },
    { 37.26667,-116.51667 },
    { 37.35000,-116.56667 },
    { 37.41667,-116.61667 },
    { 37.55000,-116.71389 },
    { 37.66667,-116.81667 },
    { 37.55000,-116.71389 },
    { 37.41667,-116.61667 },
    { 37.35000,-116.56667 },
    { 37.26667,-116.51667 },
    { 37.13333,-116.44167 },
    { 36.91667,-116.44167 },
    { 36.91667,-116.56667 },
    { 36.85000,-116.56667 },
    { 36.85000,-116.44167 },
    { 36.76667,-116.44167 },
    { 36.68333,-116.25000 },
    { 36.68333,-116.01667 },
    { 36.86667,-116.30000 },
    { 37.26667,-116.30000 },
    { 37.26667,-116.00000 },
    { 37.46667,-116.00000 },
    { 37.46667,-115.80000 },
    { 37.55000,-115.80000 },
    { 37.55000,-115.88333 },
    { 37.56667,-115.88333 },
    { 37.56667,-116.00000 },
    { 37.33333,-116.18333 },
    { 37.26667,-116.18333 },
    { 37.33333,-116.18333 },
    { 37.56667,-116.00000 },
    { 37.56667,-115.88333 },
    { 37.56667,-115.88333 },
    { 37.56667,-115.41667 },
    { 37.56667,-115.00000 },
    { 37.96667,-115.00000 },
    { 37.88333,-116.18333 },
    { 37.88333,-116.66667 },
    { 38.00000,-116.66667 },
    { 38.23333,-116.31250 },
    { 38.27826,-115.00000 },
    { 38.29167,-114.60833 },
    { 38.10000,-114.58333 },
    { 38.00972,-114.48333 },
    { 38.00000,-114.60000 },
    { 38.03333,-114.20000 },
    { 37.88333,-113.71667 },
    { 37.46667,-114.00000 },
    { 37.46667,-114.33333 },
    { 37.46667,-114.00000 },
    { 36.71667,-114.60000 },
    { 36.71667,-114.83333 },
    { 36.96667,-114.84167 },
    { 37.28333,-114.84167 },
    { 36.96667,-114.84167 },
    { 37.46667,-114.33333 },
    { 37.46667,-114.60000 },
    { 37.28333,-114.84167 },
    { 37.28333,-114.89583 },
    { 37.28333,-115.00000 },
    { 37.28333,-115.18333 },
    { 37.28333,-115.30000 },
    { 37.28333,-115.58333 },
    { 37.10000,-115.58333 },
    { 37.00000,-115.58333 },
    { 37.00000,-115.93333 },
    { 36.68333,-115.93333 },
    { 36.68333,-115.93333 },
    { 36.60000,-115.93333 },
    { 36.58333,-115.88333 },
    { 36.58333,-115.80000 },
    { 36.66667,-115.80000 },
    { 36.68333,-115.93333 },
    { 36.66667,-115.80000 },
    { 36.66667,-115.71667 },
    { 36.71667,-115.71667 },
    { 36.85000,-115.71667 },
    { 36.85000,-115.58333 },
    { 36.71667,-115.58333 },
    { 36.71667,-115.71667 },
    { 36.71667,-115.58333 },
    { 36.58333,-115.61667 },
    { 36.58333,-115.80000 },
    { 36.58333,-115.61667 },
    { 36.43333,-115.38333 },
    { 36.43333,-115.30000 },
    { 36.71667,-115.05000 },
    { 36.71667,-114.83333 },
    { 36.71667,-115.05000 },
    { 36.43333,-115.30000 },
    { 36.55000,-115.30000 },
    { 36.71667,-115.30000 },
    { 36.71667,-115.58333 },
    { 36.85000,-115.58333 },
    { 37.00000,-115.58333 },
    { 37.00000,-115.30000 },
    { 36.71667,-115.30000 },
    { 37.00000,-115.30000 },
    { 37.28333,-115.30000 },
    { 37.00000,-115.30000 },
    { 37.00000,-115.11667 },
    { 36.80000,-115.11667 },
    { 36.55000,-115.30000 },
    { 36.80000,-115.11667 },
    { 37.00000,-115.11667 },
    { 37.20000,-115.11667 },
    { 37.28333,-115.18333 },
    { 37.28333,-115.30000 },
    { 37.56667,-115.41667 },
    { 37.56667,-115.00000 },
    { 37.28333,-115.00000 },
    { 37.28333,-114.89583 },
    { 37.28333,-115.00000 },
    { 37.96667,-115.00000 },
    { 37.97500,-114.89583 },
    { 38.00972,-114.48333 },
    { 38.00000,-114.60000 },
    { 37.46667,-114.60000 },
    { 38.00000,-114.60000 },
    { 37.97500,-114.89583 },
    { 37.96667,-115.00000 },
    { 37.88333,-116.18333 },
    { 37.88333,-116.43333 },
    { 37.88333,-116.66667 },
    { 38.36667,-116.91667 },
    { 38.51667,-117.00000 },
    { 39.08333,-117.00000 },
    { 39.30000,-116.50000 },
    { 39.50000,-116.50000 },
    { 39.50000,-115.41667 },
    { 39.00000,-115.00000 },
    { 38.75000,-115.00000 },
    { 38.83333,-115.33333 },
    { 38.36667,-116.91667 },
    { 38.83333,-115.33333 },
    { 38.75000,-115.00000 },
    { 38.27826,-115.00000 },
    { 38.75000,-115.00000 },
    { 39.00000,-115.00000 },
    { 39.38333,-114.45000 },
    { 40.41667,-114.45000 },
    { 40.41667,-115.00000 },
    { 40.41667,-116.50000 },
    { 39.50000,-116.50000 }
};

RangeMap::RangeMap()
    : vertices_()
{
    ;
}

void
RangeMap::makeVertex(const LatLon& latLon, Vertex& vertex)
{
    static const double rlat = Messages::RadarConfig::GetSiteLatitude();
    static const double rlon = Messages::RadarConfig::GetSiteLongitude();
    double x = (latLon.lon - rlon) * 111.0 *
	::cos(M_PI / 180.0 * latLon.lat);
    double y = (latLon.lat - rlat) * 111.0;
    vertex.x = x;
    vertex.y = y;
}

void
RangeMap::addVertex(const Vertex& vertex)
{
    vertices_.push_back(vertex);
}

void
RangeMap::generateMap()
{
    Vertex v;
    for (size_t index = 0; index < sizeof(map_) / sizeof(LatLon);
         ++index) {
	makeVertex(map_[index], v);
	addVertex(v);
    }
}

void
RangeMap::render()
{
    if (vertices_.empty())
	generateMap();

    glBegin(GL_LINE_STRIP);
    for (size_t index = 0; index < vertices_.size(); ++index) {
	glVertex2f(vertices_[index].x, vertices_[index].y);
    }
    glEnd();
}
